ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000) %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
which_year = ny_noaa %>% distinct(year) %>% pull()
selectInput("year_choice", label = h3("Select year"),
choices = which_year, selected = "2010")
renderPlotly({
ny_noaa %>%
filter(year == input$year_choice) %>%
plot_ly(x = ~date, y = ~prcp, type = "scatter", mode = "lines",
alpha = 0.5,
color = ~prcp) %>%
layout(title = "Precipitation Trend Through the Year")
})
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000)
ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
which_year = ny_noaa %>% distinct(year) %>% pull()
selectInput("year_choice", label = h3("Select year"),
choices = which_year, selected = "2010")
renderPlotly({
ny_noaa %>%
filter(year == input$year_choice) %>%
plot_ly(x = ~date, y = ~prcp, type = "scatter", mode = "lines",
alpha = 0.5,
color = ~prcp) %>%
layout(title = "Precipitation Trend Through the Year")
})
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000)
ny_noaa_plot_1 = ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmin), tmin = as.numeric(tmin)) %>%
drop_na(tmax, tmin)
max_year = 2010
min_year = 2000
sliderInput("year_range", label = h3("Choose year range"), min = min_year,
max = max_year, value = c(2000, 2010))
renderPlotly({
ny_noaa %>%
filter(year %in% input$year_range[1]: input$year_range[2]) %>%
plot_ly(x = ~month, y = ~tmax, type = "scatter", mode = "lines+markers",
alpha = 0.0001,
color = ~tmax) %>%
layout(title = "Maximum Temperature Through the Year")
})
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmin), tmin = as.numeric(tmin)) %>%
drop_na(tmax, tmin) %>%
group_by(year, month, day) %>%
summarize(mean = mean(tmax)) %>%
ungroup()
max_year = 2010
min_year = 2000
sliderInput("year_range", label = h3("Choose year range"), min = min_year,
max = max_year, value = c(2000, 2010))
renderPlotly({
ny_noaa %>%
filter(year %in% input$year_range[1]: input$year_range[2]) %>%
plot_ly(x = ~month, y = ~tmax, type = "scatter", mode = "lines+markers",
alpha = 0.0001,
color = ~tmax) %>%
layout(title = "Maximum Temperature Through the Year")
})
# Chunk 1
library(forcats)
library(tidyverse)
library(dplyr)
library(readr)
library(plotly)
library(janitor)
library(shiny)
library(stringr)
library(rsconnect)
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000)
ny_noaa_plot_1 = ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
# Chunk 2
which_year = ny_noaa_plot_1 %>% distinct(year) %>% pull()
# selectInput widget
selectInput("year_choice", label = h3("Select year"),
choices = which_year, selected = "2010")
renderPlotly({
ny_noaa_plot_1 %>%
filter(year == input$year_choice) %>%
plot_ly(x = ~date, y = ~prcp, type = "scatter", mode = "lines",
alpha = 0.5,
color = ~prcp) %>%
layout(title = "Precipitation Trend Through the Year")
})
# Chunk 3
#PLOT 3
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmin), tmin = as.numeric(tmin)) %>%
drop_na(tmax, tmin) %>%
group_by(year, month, day) %>%
summarize(mean = mean(tmax)) %>%
ungroup()
max_year = 2010
min_year = 2000
# sliderInput widget
sliderInput("year_range", label = h3("Choose year range"), min = min_year,
max = max_year, value = c(2000, 2010))
renderPlotly({
ny_noaa_plot_3 %>%
filter(year %in% input$year_range[1]: input$year_range[2]) %>%
plot_ly(x = ~month, y = ~tmax, type = "scatter", mode = "lines+markers",
alpha = 0.0001,
color = ~tmax) %>%
layout(title = "Maximum Temperature Through the Year")
})
rm(list = ls())
```{r}
library(tidyverse)
library(dplyr)
library(readr)
library(plotly)
library(janitor)
library(shiny)
library(stringr)
library(rsconnect)
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000)
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000)
ny_noaa_plot_1 = ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
title: "Untitled"
author: "Nadiya Pavlishyn"
date: "11/14/2017"
output:
flexdashboard::flex_dashboard:
orientation: row
runtime: shiny
---
library(flexdashboard)
library(forcats)
library(tidyverse)
library(dplyr)
library(readr)
library(plotly)
library(janitor)
library(shiny)
library(stringr)
library(rsconnect)
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmin), tmin = as.numeric(tmin)) %>%
drop_na(tmax, tmin) %>%
group_by(year, month, day) %>%
summarize(mean = mean(tmax)) %>%
ungroup()
View(ny_noaa_plot_3)
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmin), tmin = as.numeric(tmin)) %>%
drop_na(tmax, tmin)
View(ny_noaa_plot_3)
group_by(year, month, day) %>%
summarize(mean_tmax = mean(tmax)) %>%
ungroup()
ny_noaa_plot_1 = ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000)
View(ny_noaa)
ny_noaa_plot_1 = ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
View(ny_noaa_plot_1)
class(ny_noaa_plot_1$year)
which_year = ny_noaa_plot_1 %>% distinct(year) %>% pull()
selectInput("year_choice", label = h3("Select year"),
choices = which_year, selected = "2010")
renderPlotly({
ny_noaa_plot_1 %>%
filter(year == input$year_choice) %>%
plot_ly(x = ~date, y = ~prcp, type = "scatter", mode = "lines",
alpha = 0.5,
color = ~prcp) %>%
layout(title = "Precipitation Trend Through the Year")
})
View(ny_noaa_plot_1)
View(ny_noaa_plot_1)
which_year = ny_noaa_plot_1 %>% pull(year)
ny_noaa_plot_1 = ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
which_year = ny_noaa_plot_1 %>% pull(year)
selectInput("year_choice", label = h3("Select year"),
choices = which_year, selected = "2010")
renderPlotly({
ny_noaa_plot_1 %>%
filter(year == input$year_choice) %>%
plot_ly(x = ~date, y = ~prcp, type = "scatter", mode = "lines",
alpha = 0.5,
color = ~prcp) %>%
layout(title = "Precipitation Trend Through the Year")
})
library(rsconnect)
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmax)) %>%
drop_na(tmax)
View(ny_noaa_plot_3)
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmax)) %>%
drop_na(tmax) %>%
group_by(year, month, day)
View(ny_noaa_plot_3)
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmax)) %>%
drop_na(tmax) %>%
select(year, month, day, tmax) %>%
group_by(year, month, day) %>%
summarize(mean_tmax = mean(tmax))
View(ny_noaa_plot_3)
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmax)) %>%
drop_na(tmax) %>%
select(year, month, day, tmax) %>%
group_by(year, month, day) %>%
summarize(mean_tmax = mean(tmax))
View(ny_noaa_plot_3)
View(ny_noaa_plot_1)
View(ny_noaa_plot_3)
ny_noaa_plot_3 = ny_noaa %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmax)) %>%
drop_na(tmax) %>%
select(year, month, day, tmax) %>%
group_by(year, month) %>%
summarize(tmax = mean(tmax))
ungroup()
max_year = 2010
min_year = 2000
sliderInput("year_range", label = h3("Choose year range"), min = min_year,
max = max_year, value = c(2000, 2010))
renderPlotly({
ny_noaa_plot_3 %>%
filter(year %in% input$year_range[1]: input$year_range[2]) %>%
plot_ly(x = ~month, y = ~tmax, type = "scatter",
alpha = 0.0001,
color = ~tmax) %>%
layout(title = "Maximum Temperature Through the Year")
})
ny_noaa_plot_3 = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000) %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmax)) %>%
drop_na(tmax) %>%
select(year, month, day, tmax) %>%
group_by(year, month) %>%
summarize(tmax = mean(tmax))
install.packages("devtools")
library(devtools)
ny_noaa_plot_1 = ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp))
max_year = 2010
min_year = 2000
sliderInput("year_range", label = h3("Choose year range"), min = min_year,
max = max_year, value = c(2000, 2010))
ny_noaa_plot_3 = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000) %>%
mutate(year = as.numeric(year), tmax = as.numeric(tmax)) %>%
drop_na(tmax) %>%
select(year, month, day, tmax) %>%
group_by(year, month) %>%
summarize(tmax = mean(tmax)) %>%
ungroup()
library(devtools)
install_version("rmarkdown", version = "1.6", repos = "http://cran.us.r-project.org (Links to an external site.)Links to an external site.")
install.packages("devtools")
install.packages("devtools")
library(devtools)
install_version("rmarkdown", version = "1.6", repos = "http://cran.us.r-project.org")
View(ny_noaa_plot_3)
library(flexdashboard)
library(tidyverse)
library(forcats)
library(plotly)
library(janitor)
library(tidyr)
library(dplyr)
library(lubridate)
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000) %>%
na.omit() %>%
mutate(tmax = as.numeric(tmax), tmin = as.numeric(tmin))
ny_noaa %>%
filter(year == 2000) %>%
select("id", "snow") %>%
group_by(id) %>%
summarize(snow = sum(snow)) %>%
mutate(snow = as.numeric(snow)) %>%
arrange(desc(snow)) %>%
top_n(10) %>%
plot_ly(x = ~id, y = ~snow, color = ~id, type = "bar")
View(ny_noaa_plot_3)
ny_noaa %>%
filter(year == 2000) %>%
select("id", "snow") %>%
mutate(id = as.factor(id))
ny_noaa %>%
filter(year == 2000) %>%
select("id", "snow") %>%
mutate(id = as.factor(id)) %>%
group_by(id) %>%
summarize(snow = sum(snow)) %>%
mutate(snow = as.numeric(snow), id = fct_reorder(id, snow)) %>%
arrange(desc(snow)) %>%
top_n(10) %>%
plot_ly(x = ~id, y = ~snow, color = ~id, type = "bar")
ny_noaa %>%
filter(year == 2000) %>%
select("id", "snow") %>%
mutate(id = as.factor(id)) %>%
group_by(id) %>%
summarize(snow = sum(snow)) %>%
mutate(id = fct_reorder(id, snow)) %>%
arrange(desc(snow)) %>%
top_n(10) %>%
plot_ly(x = ~id, y = ~snow, color = ~id, type = "bar")
library(flexdashboard)
library(flexdashboard)
library(tidyverse)
library(forcats)
library(plotly)
library(tidyr)
library(dplyr)
library(lubridate)
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000) %>%
na.omit() %>%
mutate(tmax = as.numeric(tmax), tmin = as.numeric(tmin))
ny_noaa %>%
select("year", "month","prcp") %>%
na.omit() %>%
mutate(month = as.numeric(month),
prcp = as.numeric(prcp)) %>%
group_by(year, month) %>%
summarize(mean_prcp = mean(prcp)) %>%
plot_ly(y = ~mean_prcp, x = ~month, color = ~year, type = "scatter", mode = "lines")
ny_noaa %>%
filter(year == 2000) %>%
select("id", "snow") %>%
group_by(id) %>%
summarize(snow = sum(snow)) %>%
mutate(snow = as.numeric(snow),
id = fct_reorder(id, snow)) %>%
arrange(desc(snow)) %>%
top_n(15) %>%
plot_ly(x = ~id, y = ~snow, type = "bar")
ny_noaa %>%
select("year", "month", "tmax") %>%
na.omit() %>%
mutate(tmax = as.numeric(tmax)) %>%
group_by(year, month) %>%
summarize(mean_tmax = mean(tmax)) %>%
plot_ly(y = ~mean_tmax, color = ~month, type = "box")
library(flexdashboard)
library(tidyverse)
library(dplyr)
library(dplyr)
library(readr)
library(readr)
library(plotly)
library(shiny)
library(shiny)
library(stringr)
library(rsconnect)
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000)
ny_noaa = read_csv("../data/nynoaadat.zip") %>%
clean_names %>%
separate(date, into = c("year", "month","day"), sep = "-") %>%
filter(year >= 2000)
ny_noaa_plot_1 = ny_noaa %>%
drop_na(prcp) %>%
arrange(year, month, day) %>%
select(id, year, month, day, prcp) %>%
mutate(year = as.factor(year), date = str_c(month, day, sep = ".")) %>%
select(-month, -day) %>%
group_by(year, date) %>%
mutate(prcp = mean(prcp)) %>%
ungroup()
which_year = ny_noaa_plot_1 %>% distinct(year) %>% pull()
selectInput("year_choice", label = h3("Select year"),
choices = which_year, selected = "2010")
renderPlotly({
ny_noaa_plot_1 %>%
filter(year == input$year_choice) %>%
plot_ly(x = ~date, y = ~prcp, type = "scatter", mode = "lines",
alpha = 0.5,
color = ~prcp) %>%
layout(title = "Precipitation Trend Through the Year")
})
ny_noaa_plot_2 = ny_noaa %>%
select(id, year, snow) %>%
group_by(id, year) %>%
drop_na(snow) %>%
summarize(snow = sum(snow)) %>%
ungroup() %>%
mutate(snow = as.numeric(snow),
id = fct_reorder(id, snow)) %>%
group_by(year) %>%
top_n(15)
View(ny_noaa_plot_2)
ny_noaa_plot_2 = ny_noaa %>%
select(id, year, snow) %>%
drop_na(snow) %>%
group_by(id, year) %>%
summarize(snow = sum(snow)) %>%
ungroup() %>%
mutate(snow = as.numeric(snow), id = as.factor(id),
id = fct_reorder(id, snow)) %>%
group_by(year) %>%
top_n(15)
max_year = 2010
min_year = 2000
sliderInput("year_choice", label = h3("select year"), min = min_year,
max = max_year, value = c(2000, 2010))
renderPlotly({
ny_noaa_plot_2 %>%
filter(year == input$year_choice) %>%
plot_ly(x = ~id, y = ~snow, type = "box") %>%
layout(title = "Station Accumulation Across the Years")
})
rm(list - ls())
rm(list = ls())
